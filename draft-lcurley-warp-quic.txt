



TODO Working Group                                             L. Curley
Internet-Draft                                                    Twitch
Intended status: Informational                             9 August 2021
Expires: 10 February 2022


                 Warp - Live Video Transport over QUIC
                        draft-lcurley-warp-quic

Abstract

   This document defines the Warp video transport protocol when using
   QUIC directly.  Warp maps live media to QUIC streams based on the
   underlying media encoding.  Latency is minimized achieved by
   prioritizing the delivery of specific streams during congestion.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 10 February 2022.

Copyright Notice

   Copyright (c) 2021 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Simplified BSD License text
   as described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Simplified BSD License.





Curley                  Expires 10 February 2022                [Page 1]

Internet-Draft                  WARP-QUIC                    August 2021


Table of Contents

   1.  Overview  . . . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Conventions and Definitions . . . . . . . . . . . . . . . . .   2
   3.  API . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   2
     3.1.  Establishment . . . . . . . . . . . . . . . . . . . . . .   3
     3.2.  Streams . . . . . . . . . . . . . . . . . . . . . . . . .   3
     3.3.  Frames  . . . . . . . . . . . . . . . . . . . . . . . . .   3
     3.4.  Frame . . . . . . . . . . . . . . . . . . . . . . . . . .   3
     3.5.  Messages  . . . . . . . . . . . . . . . . . . . . . . . .   3
       3.5.1.  media . . . . . . . . . . . . . . . . . . . . . . . .   4
       3.5.2.  load  . . . . . . . . . . . . . . . . . . . . . . . .   4
       3.5.3.  play  . . . . . . . . . . . . . . . . . . . . . . . .   4
       3.5.4.  pause . . . . . . . . . . . . . . . . . . . . . . . .   5
       3.5.5.  time  . . . . . . . . . . . . . . . . . . . . . . . .   5
       3.5.6.  end . . . . . . . . . . . . . . . . . . . . . . . . .   5
   4.  Security Considerations . . . . . . . . . . . . . . . . . . .   5
   5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   5
   6.  Normative References  . . . . . . . . . . . . . . . . . . . .   5
   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .   6
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   6

1.  Overview

   Warp is a strategy to deliver live video using QUIC.  The core
   concepts and shared functionality are defined in the [WARP-BASE]
   draft.  This draft defines a wire protocol for using Warp directly on
   top of QUIC.

   Warp over QUIC is a bidirectional live vieo transport.  A QUIC
   connection is established and unidirectional streams are used to
   transfer messages.  Any media data is prioritized and sent over the
   remainder of the stream.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  API








Curley                  Expires 10 February 2022                [Page 2]

Internet-Draft                  WARP-QUIC                    August 2021


3.1.  Establishment

   Warp over QUIC runs on top of a standard QUIC connection.  The
   establishment of this connection, and any other session
   establishment, is out of scope of this document.

3.2.  Streams

   [WARP-BASE] defines how media is split into multiple streams.  An
   endpoint attempting to send media MUST support the outlined stream
   prioritization scheme.

   Warp over QUIC exclusively uses unidirectional streams, initiated by
   both the client and server.

3.3.  Frames

   A stream consists of one or more frames appended together.  Streams
   can be finalized or reset with an error code.

   Frames that depend on strict ordering MUST use the same stream.
   Frames with no ordering requirements SHOULD use separate streams to
   avoid head-of-line blocking.

3.4.  Frame

   Each frame consists of the payload size in bytes followed by the
   payload itself.  The payload size is encoded as a uint32 with little
   endian encoding, utilizing 4 bytes.

   A payload size of zero indicates that the payload is unbounded and
   continues until the end of the stream.  This is used exclusively to
   transfer media data.

   A non-zero payload size indicates that it is a message.  These
   messages are used to issue commands or transfer metadata.

3.5.  Messages

   Warp uses JSON-encoded messages for simplicity.  A future draft may
   define a binary encoding once the goals of the API have been
   determined.

   Each message consists of a JSON object with a single key-value pair.
   The key identifies the message type and the value depends on the
   type.  The common message types are defined in the next section.

   "{ type: value }"



Curley                  Expires 10 February 2022                [Page 3]

Internet-Draft                  WARP-QUIC                    August 2021


   An implemenation MUST ignore any unknown message types.  This enables
   backwards compatibility and custom message types.  Any custom message
   types SHOULD use a unique prefix to avoid collisions.

3.5.1.  media

   The "media" message is used to carry metadata about the current media
   chunk.  The next frame MUST have a zero payload size and will contain
   the media in its specified container.

   *  "track" is used to distinguish between multiple tracks.

   *  "sequence" is incremented by one for each media chunk within the
      current track.

   *  "continuity" is incremented by one each time there is a
      discontinuity, requiring a decoder reset.

   "{ type: 'video'|'audio', track: int, sequence: int, continuity: int
   }"

3.5.2.  load

   The "load" message specifies stream to load.  The format and payload
   are application specific.  This must be followed by a "play" message
   to actually begin playback.

   *  "format" is the format of the payload.

   *  "payload" depents on the format.

   The only defined format is ""url"".  The payload is a fully qualified
   URL including the schema, for example: "rtmp://host.com/path".

   "{ format: string, payload: * }"

3.5.3.  play

   The "play" message starts/resumes playback the current track,
   sequence, and/or target latency.  Any of these fields can be omitted
   to maintain the current settings.

   *  "track" is the desired track index, or 0 for auto.

   *  "sequence" is the desired sequence number for seeking forwards or
      backwards.

   *  "latency" is the target latency in seconds.



Curley                  Expires 10 February 2022                [Page 4]

Internet-Draft                  WARP-QUIC                    August 2021


   "{ track: int*, sequence: int*, latency: float* }"

3.5.4.  pause

   The "pause" message halts playback until the next "play" message.
   This not does cancel any QUIC streams in flight; only prevents the
   creation of new ones.

3.5.5.  time

   The "time" message is used for simple clock synchronization.  It
   includes the sender's current unix epoch and the estimated
   transmission delay.  An endpoint MUST prioritize the delivery of this
   message to avoid queuing.

   *  "epoch" is the sender's current unix timestamp in seconds.

   *  "delay" is the transmission delay in seconds, computed as half of
      the [QUIC-RECOVERY] RTT estimation.

   "{ epoch: float, delay: float }"

3.5.6.  end

   The "end" message is used to signal the end of a media stream.

   *  "track" is the track identifier.

   *  "sequence" is the last valid sequence number.

   *  "error" is an optional error message

   "{ track: ``, sequence: ``, error: string* }"

4.  Security Considerations

   TODO Security

5.  IANA Considerations

   This document has no IANA actions.

6.  Normative References

   [QUIC]     Iyengar, J., Ed. and M. Thomson, Ed., "QUIC: A UDP-Based
              Multiplexed and Secure Transport", RFC 9000, May 2021,
              <https://www.rfc-editor.org/rfc/rfc9000>.




Curley                  Expires 10 February 2022                [Page 5]

Internet-Draft                  WARP-QUIC                    August 2021


   [QUIC-RECOVERY]
              Iyengar, J., Ed. and I. Swett, Ed., "QUIC Loss Detection
              and Congestion Control", RFC 9002, DOI 10.17487/RFC9002,
              May 2021, <https://www.rfc-editor.org/rfc/rfc9002>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [WARP-BASE]
              Curley, L., "Warp - Live Video Transport", Work in
              Progress, Internet-Draft, draft-lcurley-warp-base,
              <https://datatracker.ietf.org/doc/html/draft-lcurley-warp-
              base>.

Acknowledgments

   TODO acknowledge.

Author's Address

   Luke Curley
   Twitch

   Email: lcurley@twitch.tv





















Curley                  Expires 10 February 2022                [Page 6]
