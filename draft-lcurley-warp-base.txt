



TODO Working Group                                             L. Curley
Internet-Draft                                                    Twitch
Intended status: Informational                             9 August 2021
Expires: 10 February 2022


                      Warp - Live Video Transport
                        draft-lcurley-warp-base

Abstract

   This document defines the core behavior for Warp video transport
   protocol family: [WARP-QUIC] and [WARP-HTTP3].  Warp is the method of
   mapping of live media to QUIC streams based on the underlying media
   encoding.  Latency is minimized achieved by prioritizing the delivery
   of specific streams during congestion.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 10 February 2022.

Copyright Notice

   Copyright (c) 2021 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Simplified BSD License text
   as described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Simplified BSD License.




Curley                  Expires 10 February 2022                [Page 1]

Internet-Draft                  WARP-BASE                    August 2021


Table of Contents

   1.  Overview  . . . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Terms and Definitions . . . . . . . . . . . . . . . . . .   3
   2.  Background  . . . . . . . . . . . . . . . . . . . . . . . . .   3
     2.1.  Encoding  . . . . . . . . . . . . . . . . . . . . . . . .   3
       2.1.1.  Video . . . . . . . . . . . . . . . . . . . . . . . .   3
       2.1.2.  Audio . . . . . . . . . . . . . . . . . . . . . . . .   3
     2.2.  Latency . . . . . . . . . . . . . . . . . . . . . . . . .   4
     2.3.  Congestion  . . . . . . . . . . . . . . . . . . . . . . .   4
       2.3.1.  Encoder Backpressure  . . . . . . . . . . . . . . . .   4
       2.3.2.  Media Dropping  . . . . . . . . . . . . . . . . . . .   4
   3.  Streams . . . . . . . . . . . . . . . . . . . . . . . . . . .   5
     3.1.  Media Container . . . . . . . . . . . . . . . . . . . . .   5
     3.2.  Media Type  . . . . . . . . . . . . . . . . . . . . . . .   5
       3.2.1.  Video Streams . . . . . . . . . . . . . . . . . . . .   5
       3.2.2.  Audio Streams . . . . . . . . . . . . . . . . . . . .   5
     3.3.  Multiple Tracks . . . . . . . . . . . . . . . . . . . . .   5
   4.  Prioritization  . . . . . . . . . . . . . . . . . . . . . . .   6
     4.1.  Streams . . . . . . . . . . . . . . . . . . . . . . . . .   6
       4.1.1.  Live Content  . . . . . . . . . . . . . . . . . . . .   6
       4.1.2.  Recorded Content  . . . . . . . . . . . . . . . . . .   6
     4.2.  Retransmissions . . . . . . . . . . . . . . . . . . . . .   6
     4.3.  Starvation  . . . . . . . . . . . . . . . . . . . . . . .   7
   5.  Endpoints . . . . . . . . . . . . . . . . . . . . . . . . . .   7
     5.1.  Encoder . . . . . . . . . . . . . . . . . . . . . . . . .   7
     5.2.  Sender  . . . . . . . . . . . . . . . . . . . . . . . . .   7
     5.3.  Receiver  . . . . . . . . . . . . . . . . . . . . . . . .   8
     5.4.  Middleware  . . . . . . . . . . . . . . . . . . . . . . .   8
     5.5.  Decoder . . . . . . . . . . . . . . . . . . . . . . . . .   8
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .   8
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   8
   8.  Normative References  . . . . . . . . . . . . . . . . . . . .   9
   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .   9
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   9

1.  Overview

   Warp is a live video transport protocol that utilizes the [QUIC]
   network protocol.  There are two Warp variants depending on product
   requirements:

   *  [WARP-QUIC] is an API on top of QUIC.

   *  [WARP-HTTP3] is an API on top of HTTP/3, primarily for
      distribution over CDNs.

   This document covers the shared behavior for both variants.



Curley                  Expires 10 February 2022                [Page 2]

Internet-Draft                  WARP-BASE                    August 2021


1.1.  Terms and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

2.  Background

2.1.  Encoding

   In order to optimize media delivery over a network, it's important to
   have a basic understanding of how media is encoded.

2.1.1.  Video

   Video encoding works by computing deltas between frames.  Each frame
   can depend on 0, 1, or multiple frames in the past, or sometimes
   future.

   There are a few common frame types:

   *  I frames are effectively a static image, so they are relatively
      large

   *  P frames depend on previous I or P frames.

   *  B frames depend on future P or B frames, and possibly previous I
      or P frames,

   TODO diagram

2.1.2.  Audio

   Audio encoding works by producing samples at a specified frequency.
   These samples are grouped together based on the sample rate (also
   called frames).  Unlike video, groups of audio samples do not depend
   on each other.

   Some video transport protocols (like WebRTC) choose to prioritize
   audio over video for a few reasons:

   *  Audio is more important for some applications (ex.
      teleconferencing)

   *  Audio gaps are far more noticable.




Curley                  Expires 10 February 2022                [Page 3]

Internet-Draft                  WARP-BASE                    August 2021


   *  Audio uses a fraction of the bandwidth.

2.2.  Latency

   The latency of a video protocol depends on how long media frames are
   queued.  Media can be queued for a number of different reasons, such
   as to improve the compression ratio by using more reference frames.

   For a video transport protocol, the vast majority of queuing (and
   thus latency) is caused by network congestion.

2.3.  Congestion

   Congestion occurs when a network is oversaturated and is unable to
   deliver packets in a timely manner.

   During periods of congestion, intermediate routers will queue and
   eventually drop packets.  Excessive queuing causes bufferbloat,
   increasing latency and eating into any buffer maintained by the
   receiver.

   [QUIC-RECOVERY] outlines how QUIC limits the transmission rate in
   response to congestion.  When this happens, encoder bitrate can
   exceed that of the transmission bitrate and results in queuing.  The
   ability to rapidly respond to this situation determines the latency
   of a video transport protocol.

2.3.1.  Encoder Backpressure

   The simplest response to network congestion is to reduce the encoder
   bitrate.  The encoder can be reconfigured relatively quickly, while
   any queued media is delivered or reencoded.

   However, tweaking the encoder bitrate has ramifications when there
   are multiple recipients.  Network congestion for one receipient will
   cause degraded video quality for other participants.

2.3.2.  Media Dropping

   As mentioned in the encoding section, video frames and audio samples
   only sometimes depend on each other.  It is possible to deliver
   certain frames out-of-order or drop them entirely.

   The effective media bitrate can be reduced by dropping frames at the
   network layer.  The specific frames dropped have an impact on media
   decoding, so it's important that the network layer takes this into
   account.




Curley                  Expires 10 February 2022                [Page 4]

Internet-Draft                  WARP-BASE                    August 2021


3.  Streams

   QUIC provides independent streams multiplexed over a connection.
   These streams are ordered and reliable, but can be closed early by
   either endpoint.

   Media sent over a single QUIC stream would suffer from head-of-line
   blocking.  Warp avoids this by utilizing multiple concurrent QUIC
   streams based on the media encoding.

   For [WARP-HTTP3], these concepts apply to the underlying
   bidirectional stream for each request.

3.1.  Media Container

   Stream payloads start with a warp-specific header indicating the
   content.  The remainder of the stream consists of a FMP4 or TS media
   container, depending on the configuration.

3.2.  Media Type

   Audio and video are split into separate QUIC streams.  The timestamp
   within the media container is used for synchronization.

3.2.1.  Video Streams

   Video is split into a separate QUIC streams that can be delivered and
   decoded independently.  This is done by splitting at GoP boundaries,
   preferably one stream per GoP.  A video stream is finalized when the
   next one begins.

   QUIC streams are reliable and ordered, so frames are flushed to the
   application in decode order.  This is ideal when the GoP structure is
   linear or unknown, as it prevents decode errors.

3.2.2.  Audio Streams

   Audio samples are also split into separate QUIC streams.  An audio
   stream is finalized when the next one begins.

   Audio streams should be aligned with video streams, which are split
   based on the GoP.  This allows an endpoint to drop the same amount of
   audio and video if desired.

3.3.  Multiple Tracks

   Sessions can support multiple tracks or renditions sent over separate
   QUIC streams.



Curley                  Expires 10 February 2022                [Page 5]

Internet-Draft                  WARP-BASE                    August 2021


4.  Prioritization

   Warp utilizes a stream priority scheme rather than deadlines.  This
   ensures that the most important content is delivered first without
   constant coordination between endpoints.

4.1.  Streams

   The sender assigns a priority to each QUIC stream.  Warp uses a
   strict prioritzation scheme, such that any available bandwidth is
   allocated to streams in descending priority order.

   QUIC supports stream prioritization but does not standardize any
   mechanisms; see Section 2.3 in [QUIC].  The sender need to add
   support in their QUIC implementation.

4.1.1.  Live Content

   Live content is encoded and delivered in real-time.  The video
   transport protocol is typically blocked on the encoder throughput
   rather than the network, except during congestion.

   Audio streams SHOULD be prioritized over video streams.  This will
   skip video while audio continues uninterupted during congestion.

   Newer video streams SHOULD be prioritized over older video streams.
   This will skip over older video content during congestion.

4.1.2.  Recorded Content

   Recorded content has already been encoded and can be delivered at
   line speed.  The video transport protocol is only blocked on the
   network throughput.

   Warp is primarily designed for live content, but can switch to head-
   of-line blocking by changing stream prioritization.  This is also
   useful for content that should not be skipped over, such as
   advertisements.

   To enable head-of-line blocking: older streams SHOULD be prioritized
   over newer streams.

4.2.  Retransmissions

   STREAM frames may be lost over the network and require retransmision.
   A Warp sender MAY choose to delay retransmitting these frames if a
   higher priority stream can be sent instead.




Curley                  Expires 10 February 2022                [Page 6]

Internet-Draft                  WARP-BASE                    August 2021


   When this is done, stream prioritization MUST still obey QUIC flow
   control.  STREAM frames counts towards flow control limits, even when
   lost, until the frame is acknowledged or the stream reset.  A Warp
   sender SHOULD retransmit frames instead of prioritizing other streams
   when nearing connection flow control limits.

4.3.  Starvation

   During congestion, this prioritization scheme will intentionally
   cause stream starvation for the lowest priority streams.  This
   starvation will last until the network fully recovers, which may be
   indefinite.

   When nearing resource limits, an endpoint SHOULD close the lowest
   priority stream.  The receiver CAN close a stream after it has been
   skipped to reduce network usage.

5.  Endpoints

   This section covers a few requirements and suggestions depending on
   the endpoint.

5.1.  Encoder

   The encoder SHOULD insert a keyframe at least every 4 seconds.  This
   allows the receiver to skip ahead to the next GoP during periods of
   congestion.

   The encoder SHOULD reduce the media bitrate during periods of
   sustained congestion.  This allows the receiver to recover catch up
   and reduces the amount of media skipped.

   A low-latency encoder configuration is recommended.

5.2.  Sender

   The sender is the network component responsible for sending Warp
   streams.

   The sender SHOULD use a delay-based congestion control algorithm to
   counter bufferbloat.  Live video is produced and delivered at a
   consistent rate, so any queuing on intermediate routers will
   introduce latency.

   The sender SHOULD NOT be responsible for imposing latency deadlines,
   and instead SHOULD defer to the receiver to cancel streams (ie.
   STOP_SENDING).




Curley                  Expires 10 February 2022                [Page 7]

Internet-Draft                  WARP-BASE                    August 2021


5.3.  Receiver

   The receiver is the network component responsible for receiver Warp
   streams.

   The receiver SHOULD cancel a stream (ex.  STOP_SENDING) once its
   contents have been fully skipped to save bandwidth.

5.4.  Middleware

   Warp senders and receivers can be combined to form middleware.  For
   example, intermediate servers that perform caching within a video
   distribution system.

   The middleware SHOULD maintain the same stream priority, within the
   scope of a session.  The middleware CAN implement its own
   prioritization scheme when congestion is unlikely.

   The middleware MUST NOT introduce any head-of-line blocking.  This
   means the middleware MUST NOT combine streams or otherwise introduce
   dependencies.

5.5.  Decoder

   The decoder MUST maintain a separate audio and video buffer.  The
   initial and maximum size of this buffer depends on the application.
   The decoder CAN pause playback to increase the size of the buffer
   during persistent congestion.

   The decoder SHOULD maintain a constant playback rate.  The decoder
   SHOULD temporarily desynchronize audio and video when one of the
   buffers is missing data.

   The decoder CAN drop audio samples if there is a gap in the audio
   buffer.  This may introduce a noticable blip.

   The decoder SHOULD drop video frames if there is a gap in the video
   buffer.  The decoder CAN show late video frames.  This will result in
   video that is missing or late compared to audio.

6.  Security Considerations

   TODO Security

7.  IANA Considerations

   This document has no IANA actions.




Curley                  Expires 10 February 2022                [Page 8]

Internet-Draft                  WARP-BASE                    August 2021


8.  Normative References

   [QUIC]     Iyengar, J., Ed. and M. Thomson, Ed., "QUIC: A UDP-Based
              Multiplexed and Secure Transport", RFC 9000,
              DOI 10.17487/RFC9000, May 2021,
              <https://www.rfc-editor.org/rfc/rfc9000>.

   [QUIC-RECOVERY]
              Iyengar, J., Ed. and I. Swett, Ed., "QUIC Loss Detection
              and Congestion Control", RFC 9002, DOI 10.17487/RFC9002,
              May 2021, <https://www.rfc-editor.org/rfc/rfc9002>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [WARP-HTTP3]
              Curley, L., "Warp - Live Video Transport over HTTP/3",
              Work in Progress, Internet-Draft, draft-lcurley-warp-
              http3, <https://datatracker.ietf.org/doc/html/draft-
              lcurley-warp-http3>.

   [WARP-QUIC]
              Curley, L., "Warp - Live Video Transport over QUIC", Work
              in Progress, Internet-Draft, draft-lcurley-warp-quic,
              <https://datatracker.ietf.org/doc/html/draft-lcurley-warp-
              quic>.

Acknowledgments

   TODO acknowledge.

Author's Address

   Luke Curley
   Twitch

   Email: lcurley@twitch.tv








Curley                  Expires 10 February 2022                [Page 9]
